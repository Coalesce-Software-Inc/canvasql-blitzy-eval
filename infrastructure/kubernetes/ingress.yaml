apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: erd-tool-ingress
  namespace: erd-visualization
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # Timeout configurations for long-running WebSocket connections
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    
    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "8m"
    
    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    
    # WAF configuration
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"

spec:
  tls:
    - hosts:
        - ${DOMAIN_NAME}
      secretName: erd-tool-tls
  rules:
    - host: ${DOMAIN_NAME}
      http:
        paths:
          # Frontend SPA route
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
          
          # Backend API route
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 3000
          
          # WebSocket route for real-time collaboration
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: websocket-service
                port:
                  number: 3001