/* Import React Flow base styles */
@import 'reactflow/dist/style.css';

/* Diagram Variables */
:root {
  --node-width: 280px;
  --node-header-height: 40px;
  --node-border-radius: 8px;
  --edge-width: 2px;
  --minimap-height: 120px;
  --grid-size: 16px;
  --zoom-factor: 0.85;
  --animation-duration: 200ms;
  --selection-ring-size: 2px;
  --cursor-size: 16px;
}

/* Theme-specific variables */
:root[data-theme="light"] {
  --node-border: hsl(var(--border));
  --node-background: hsl(var(--background));
  --edge-color: hsl(var(--muted-foreground));
  --grid-color: hsl(var(--muted));
  --selection-color: hsl(var(--primary));
  --handle-color: hsl(var(--primary));
}

:root[data-theme="dark"] {
  --node-border: hsl(var(--border));
  --node-background: hsl(var(--background));
  --edge-color: hsl(var(--muted-foreground));
  --grid-color: hsl(var(--muted));
  --selection-color: hsl(var(--primary));
  --handle-color: hsl(var(--primary));
}

/* Canvas Styles */
.diagram-container {
  width: 100%;
  height: 100%;
  background-color: hsl(var(--background));
  will-change: transform;
}

.diagram-wrapper {
  width: 100%;
  height: calc(100vh - var(--header-height));
  position: relative;
  overflow: hidden;
}

.diagram-canvas {
  touch-action: none;
  user-select: none;
  background-image: var(--grid-pattern);
}

.diagram-minimap {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  z-index: 100;
  background-color: hsl(var(--background)/0.9);
  backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow: var(--shadow-lg);
  height: var(--minimap-height);
  width: 200px;
}

.diagram-grid {
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image: var(--grid-pattern);
  opacity: 0.5;
}

/* Node Styles */
.node {
  background-color: hsl(var(--background));
  border: 1px solid var(--node-border);
  border-radius: var(--node-border-radius);
  box-shadow: var(--shadow-sm);
  width: var(--node-width);
  overflow: hidden;
  transition: box-shadow var(--animation-duration);
}

.node-header {
  background-color: hsl(var(--muted));
  padding: 0 1rem;
  height: var(--node-header-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--node-border);
  user-select: none;
}

.node-title {
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: hsl(var(--foreground));
}

.node-content {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.node-selected {
  ring: var(--selection-ring-size) solid hsl(var(--primary));
  ring-offset: 2px;
}

.node-dragging {
  opacity: 0.7;
  cursor: grabbing;
  box-shadow: var(--shadow-lg);
  transform: scale(1.02);
  will-change: transform;
}

.node-columns {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  min-height: 40px;
}

.node-column {
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 0.875rem;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
}

.node-column:hover {
  background-color: hsl(var(--muted)/0.5);
}

.node-column-name {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  font-weight: 500;
}

.node-column-type {
  color: hsl(var(--muted-foreground));
  font-size: 0.75rem;
  margin-left: 0.5rem;
}

.node-handle {
  width: 0.75rem;
  height: 0.75rem;
  border: 2px solid var(--handle-color);
  background-color: hsl(var(--background));
}

/* Edge Styles */
.edge {
  stroke-width: var(--edge-width);
  stroke: var(--edge-color);
  transition: all var(--animation-duration);
}

.edge-path {
  stroke: inherit;
  fill: none;
}

.edge-marker {
  fill: currentColor;
  stroke: none;
}

.edge-label {
  padding: 0.375rem 0.625rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  background-color: hsl(var(--muted));
  color: hsl(var(--muted-foreground));
  user-select: none;
}

.edge-selected {
  stroke: hsl(var(--primary));
  stroke-width: calc(var(--edge-width) * 1.5);
}

.edge-animated {
  stroke-dasharray: 4;
  animation: flow 1s linear infinite;
}

.edge-hover {
  stroke-width: calc(var(--edge-width) * 1.2);
  stroke: hsl(var(--primary)/0.8);
}

.edge-connecting {
  stroke: hsl(var(--success));
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Control Styles */
.controls-container {
  position: fixed;
  bottom: 1rem;
  left: 1rem;
  z-index: 100;
  background-color: hsl(var(--background)/0.9);
  backdrop-filter: blur(8px);
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow: var(--shadow-lg);
  padding: 0.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.control-button {
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0.25rem;
  transition: background-color var(--animation-duration);
}

.control-button:hover {
  background-color: hsl(var(--accent));
}

.control-button:focus {
  outline: none;
  ring: 2px solid hsl(var(--primary));
}

.control-button-active {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
}

.zoom-controls {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  border-bottom: 1px solid hsl(var(--border));
  padding-bottom: 0.5rem;
}

.fit-view-button {
  transform: rotate(0deg);
  transition: transform 300ms ease;
}

.fit-view-button:hover {
  transform: rotate(180deg);
}

.lock-button[data-locked="true"] {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

/* Collaboration Styles */
.cursor {
  width: var(--cursor-size);
  height: var(--cursor-size);
  position: absolute;
  pointer-events: none;
  z-index: 50;
  transition: all 100ms ease;
  will-change: transform;
}

.cursor-dot {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 9999px;
  background-color: hsl(var(--primary));
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.cursor-label {
  padding: 0.375rem 0.625rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  margin-left: 1rem;
  white-space: nowrap;
  transform: translateY(-100%);
}

.presence-indicator {
  width: 0.5rem;
  height: 0.5rem;
  border-radius: 9999px;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
}

.presence-online {
  background-color: hsl(var(--success));
}

.presence-away {
  background-color: hsl(var(--warning));
}

.presence-offline {
  background-color: hsl(var(--muted));
}

/* Animations */
@keyframes flow {
  from {
    stroke-dashoffset: 8;
  }
  to {
    stroke-dashoffset: 0;
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Responsive Styles */
@media (max-width: 640px) {
  :root {
    --node-width: 240px;
  }
  
  .diagram-minimap {
    display: none;
  }
}

@media (max-width: 768px) {
  .controls-container {
    bottom: 0.5rem;
    left: 0.5rem;
  }
}

@media (max-width: 1024px) {
  .node-column-type {
    display: none;
  }
}